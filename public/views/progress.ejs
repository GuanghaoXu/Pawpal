<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Home Page</title> 
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
  <link rel="stylesheet" href="css/style.css"/>
  <link rel="stylesheet" href="css/tasks.css"/>
</head>



<body class="gradient-background">
  <section class="gradient-background" id="menuBar">
      <div class="container-fluid">   <!-- width adaptable container -->
      <nav class="navbar navbar-expand-lg navbar-light"> <!-- navbar classes included -->
          <a class="navbar-brand" href="/profile"><img src="images/pawpal.png" width="150"></a>  
          <ul class="navbar-nav mr-auto"> <!-- margin-right auto means left justifying -->
            <li class="nav-item">
                <a class="nav-link" href="/tasks">Tasks</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/progress">Progress</a>
            </li>
          </ul>

          <ul class="navbar-nav ml-auto">
              <input type="text" id="searchBox" placeholder="Search here">
              <button class="btn my-2 my-sm-0" id="searchButton">Search</button>
          </ul>
          <ul class="navbar-nav">
          <li class="nav-item">
              <a class="nav-link" href="/login">Log Out</a>
          </li>
          </ul>
      </nav>
      </div>
  </section>

  <div class="container-fluid h-100">
    <div class="row h-100">
      <!-- Criteria Selection Sidebar -->
      <div class="col-md-2 py-4 d-flex flex-column" id="CriteriaSelectionArea"
        style="min-height: 100vh; border-right: 1px solid rgba(200, 200, 200, 0.5);">
        <!-- padding yp and down -->
        <div class="px-3">
          <!-- padding left and right -->
          <h6 style="font-weight: bold; font-style: italic;">Schedule:</h6>
          <select class="form-control mb-3" id="progressFilter">
            <!-- bottom margin 3-->
            <option>All tasks</option>
            <option>In progress</option>
            <option>Scheduled</option>
            <option>Completed</option>
          </select>
          <button class="btn btn-primary w-100" id="applyProgressFilters">Apply Filters</button>
        </div>
      </div>

      <!-- Main Content Area -->
      <div class="col-md-10" id = "MainProgressArea">
        <div class="card mt-3 TaskSelectionArea">
          <h6 class="mt-2">
            All tasks
          </h6>
          <div class="row" id="ProgressTaskContainer"></div>
        </div>
        
      </div>
    </div>
  </div>


  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="js/progress.js"></script>
  <script>
    let username = "<%= username %>";
    $(document).ready(function() {
      $.ajax({
        url: '/api/tasks', // Ensure that this URL matches the backend routing
        type: 'GET',
        dataType: 'json', // Expected data type to be returned from the server
        success: function(tasks) {
          // Clear existing task cards
          $('#taskContainer').empty();
  
          // Dynamically create task cards and add them to the page
          tasks.forEach(function(task) {
            if (task.AcceptedBy != username) return;
            var taskCard = `
              <div class="col-md-4 mb-3 task-card" data-taskid="${task._id}">
                <div class="card TaskCard">
                  <div class="card-header">${task.title}</div>
                  <div class="card-body">
                    <h5 class="card-title">${task.urgency} Task</h5>
                    <p class="card-text">${task.description}</p>
                    <div class="task-actions">
                      <button class="btn btn-success start-task" data-id="${task._id}">Start</button>
                      <button class="btn btn-danger cancel-task" data-id="${task._id}">Cancel</button>
                    </div>
                  </div>
                </div>
              </div>`;
            if(task.acceptance == true){
              $('#ProgressTaskContainer').append(taskCard); // Add newly created task cards to the container
              if(task.Start == true){
                var startTime = new Date(task.StartAt);
                var $taskCard = $(`[data-taskid="${task._id}"]`).last();
                if(task.Done == true){
                  $taskCard.find('.task-actions').html(`<button class="btn btn-primary" disabled>Completed</button>`);
                } else {
                  startTimeJob(task._id, $taskCard,startTime);
                }
              }
            }
          });
          $(document).on('click', '.cancel-task', function() {
            var taskId = $(this).data('id'); //.data() visit the value of "data-*", "id" replace the *
            $(this).html(
                '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>'
            )
            cancelTask(taskId); 
          });
          $(document).on('click', '.start-task', function() {
            var $taskCard = $(this).closest('.task-card');
            var taskId = $(this).data('id');
            $(this).html(
                '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>'
            )
            startTask(taskId, $taskCard);
          });
        },
        error: function(xhr, status, error) {
          console.error("Error fetching tasks: ", error);
        }
      });
    });

    function cancelTask(taskId) {
      $.ajax({
        url: '/api/tasks/cancel/' + taskId, 
        type: 'POST', 
        dataType: 'json',
        success: function(response) {
        // Select all task cards with this task ID
        $('.task-card').filter(function() {
          return $(this).data('taskid') === taskId;
        }).fadeOut('slow', function() { 
          // Remove task cards from DOM after animation completion
          $(this).remove();
        });
      },
        error: function(xhr, status, error) {
          console.error("Error cancelling task: ", error);
        }
      });
    }

    function startTask(taskId, $taskCard) {
      $.ajax({
        url: '/api/tasks/start/' + taskId,
        type: 'POST',
        dataType: 'json',
        success: function(response) {

        },
        error: function(xhr, status, error) {
          console.error("Error cancelling task: ", error);
        }
      });

      startTimeJob(taskId, $taskCard, new Date());
    }



  </script>
</body>

</html>